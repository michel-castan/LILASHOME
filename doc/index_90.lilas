<?xml version="1.0" encoding="UTF-8"?>

<module>
	<doc>
		
		
	</doc>
	
  <signal mode="in" name="ledDebug" type="lilas.type.StdLogic" init="0x00"/>
  <signal mode="in" name="ledNexys3" type="lilas.type.StdLogic" init="0x00"/>
  <signal mode="in" name="clkNexys3Manuel" type="lilas.type.StdLogic" init="0b0"/>
  <signal mode="in" name="digitDebug" type="lilas.type.StdLogic" init="0x0000"/>
  <signal mode="in" name="digitNexys3" type="lilas.type.StdLogic" init="0x01010101"/>
  <signal mode="out" name="swNexys3" type="lilas.type.StdLogic" init="0x00"/>
  <signal mode="out" name="btnNexys3" type="lilas.type.StdLogic" init="0b00000"/>
  <signal mode="out" name="resetNexys3" type="lilas.type.StdLogic" init="0b0"/>
  <signal mode="internal" name="resetInterne" type="lilas.type.StdLogic" init="0b0"/>
  <signal mode="out" name="hardReset" type="lilas.type.StdLogic" init="0b0"/>
  <signal mode="internal" name="clkInterne" type="lilas.type.StdLogic" init="0b0"/>
  <signal mode="out" name="clkNexys3" type="lilas.type.StdLogic" init="0b0"/>
  <signal mode="internal" name="noClk" type="lilas.type.StdLogic" sensitive="true" init="0b00"/>
  <signal mode="out" init="0b0" name="modePasAPasStatus" type="lilas.type.StdLogic"/>
  <signal mode="internal" init="0b0" name="modePasAPasInterne" type="lilas.type.StdLogic"/>
  <signal mode="internal" init="0b0" name="modePasAPasInterneClkDiv" type="lilas.type.StdLogic"/>
  <signal mode="internal" init="0b0" name="modePasAPasInterneClkDebug" type="lilas.type.StdLogic"/>
  <signal mode="in" name="stopClk" type="lilas.type.StdLogic" init="0b0"/>
  <signal mode="in" init="0x0" name="cmdGenClk" type="lilas.type.StdLogic"/>
  <signal mode="internal" init="0b0" name="arretClkParPC" type="lilas.type.StdLogic"/>
  <signal mode="in" name="startClkPulse" type="lilas.type.StdLogic" init="0b0"/>
  <signal mode="in" name="loadRegToFPGA" type="lilas.type.StdLogic" init="0b0"/>
  <signal mode="out" name="cmdGenClkInit" type="lilas.type.StdLogic" init="0x0"/>
  <signal mode="in" name="etatDSTM" type="lilas.type.StdLogic" init="0x0"/>
  	  	 
  <signal mode="out" name="clkDebug" type="lilas.type.StdLogic" init="0b0"/>
  <signal mode="internal" name="startClkPasAPas" type="lilas.type.StdLogic" init="0b0"/>
  <signal mode="internal" name="endClkPasAPas" type="lilas.type.StdLogic" init="0b0"/>
  <signal mode="internal" name="startClkDebug" type="lilas.type.StdLogic" init="0b0"/>
  			 
  <signal mode="out" name="ledsBroches" init="0x00" type="lilas.type.StdLogic"/><!-- LED7 LED6 LED5 LED4 LED3 LED2 LED1 LED0 -->
  <signal mode="in" name="swBroches" type="lilas.type.StdLogic" init="0x00"/><!-- SW7 SW6 SW5 SW4 SW3 SW2 SW1 SW0 -->
  <signal mode="in" name="btnBroches" type="lilas.type.StdLogic" sensitive="true" init="0b00000"/><!-- C U D L R -->
  <signal mode="in" name="clk100M" type="lilas.type.StdLogic" sensitive="true" init="0b0"/>
  <signal mode="out" name="Seg" type="lilas.type.StdLogic" init="0x00"/><!-- A B C D E F G P -->
  <signal mode="out" name="AN" type="lilas.type.StdLogic" init="0x0"/> <!-- AN0 AN1 AN2 AN3 -->
  
  <signal mode="internal" name="noChiffre" type="lilas.type.StdLogic" init="0b00" sensitive="true"/>
  <signal mode="internal" name="swFiltres" type="lilas.type.StdLogic" init="0x00"/>
  <signal mode="internal" name="btnFiltres" type="lilas.type.StdLogic" init="0b00000"/>

  <signal mode="internal" name="hardResetInterne" type="lilas.type.StdLogic" init="0b0"/>
  <signal mode="internal" name="clkDivisee" type="lilas.type.StdLogic" init="0b0"/>
  <signal mode="internal" name="changementMode" type="lilas.type.StdLogic" init="0b0"/>
  <signal mode="internal" name="modeIO" type="lilas.type.StdLogic" init="0b0"/>
 
  <GenClock package="lilas.bib.nexys3.genClk" clk100M="clk100M" hardResetInterne="hardResetInterne" cmdGenClk="cmdGenClk" clkNexys3Manuel="clkNexys3Manuel" startClkPulse="startClkPulse" resetNexys3="resetInterne" clkNexys3="clkInterne" clkDebug="clkDebug"/>
  	 	  	
 <GenClockParametrableClkInv package="lilas.bib.nexys3" name="genClkDivisee"
 	reset="hardResetInterne" clk100M="clk100M" modePasAPas="0b0" autoReload="0x40000" autoReloadSize="20"
  	startClkPasAPas="0b0" clk="clkDivisee"/> 
  
 <GestionArretClk package="lilas.bib.nexys3" name="gestArret" reset="resetInterne" modeArretClk="modePasAPasInterne" dmdStop="stopClk"
  	arretClkParPC="arretClkParPC" clk100M="clk100M" loadRegToFPGA="loadRegToFPGA"/>
 
  <ModeIO package="lilas.bib.nexys3" name="gestModeIO" reset="hardResetInterne" clk100M="clk100M" modeIO="modeIO" changementMode="changementMode"/>
  
  <RegisterCmdGenClkInit clk100M="clk100M" swBroches="swBroches" btnBroches="btnBroches" cmdGenClkInit="cmdGenClkInit"/>
  
  <code language="logic"><![CDATA[
  arretClkParPC <= cmdGenClk[3] or cmdGenClk[2];
  clkNexys3 <= clkInterne;
  // ctr diviseur horloge
  hardResetInterne <= btnBroches[4];
  changementMode <= btnFiltres[1];
  if resetInterne then
  	noChiffre <= 0b00;
  elsif selected(clkDivisee) and clkDivisee then
  		noChiffre <= noChiffre plus 0b1;
    	swFiltres <= swBroches;
    	btnFiltres <= btnBroches;
  end if; 
    
  AN <= with noChiffre select (0b1110, 0b1101, 0b1011, 0b0111);
  LOCAL q4b <= with noChiffre select (digitDebug[15:12], digitDebug[11:8], digitDebug[7:4], digitDebug[3:0]);
  
  LOCAL SegHexa <= with q4b select (
        0b01110000, 0b01100000, 0b10000100, 0b01100010, 0b11000000, 0b00010000, 0b00001000, 0b00000000,
        0b00011110, 0b01000000, 0b01001000, 0b10011000, 0b00001100, 0b00100100, 0b10011110, 0b00000010);
  LOCAL SegGraphique <= with noChiffre select (digitNexys3[31:24], digitNexys3[23:16], digitNexys3[15:8], digitNexys3[7:0]);
  
  LOCAL modeIOlocal:1 <= modeIO and not(etatDSTM[3] or etatDSTM[2] or etatDSTM[1] or etatDSTM[0]);
  Seg <= with modeIOlocal select (SegGraphique, SegHexa); 
   
  swNexys3 <= swFiltres; 
  btnNexys3 <= btnFiltres;

  resetNexys3 <= resetInterne;
  hardReset <= hardResetInterne;
  ledsBroches <= with modeIOlocal select (ledNexys3, ledDebug);
  startClkPasAPas <= startClkPulse and not cmdGenClk[3] and cmdGenClk[2];
  startClkDebug <= startClkPulse and cmdGenClk[3] and not cmdGenClk[2];
  modePasAPasStatus <= modePasAPasInterne;
  noClk <= cmdGenClk[1:0];
  ]]>
</code>

  
</module>
